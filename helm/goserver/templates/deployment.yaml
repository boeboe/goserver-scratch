---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}
  labels:
    app: {{ .Values.service.name }}
    chart: 'goserver-{{ .Chart.Version | replace "+" "_" }}'
    version: {{ .Values.service.version }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
        version: {{ .Values.service.version }}
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: {{ .Values.service.account }}
      containers:
        - name: goserver
          image: boeboe/goserver-scratch:1.0.0
          imagePullPolicy: {{ .Values.deployment.pullPolicy }}
          ports:
            - name: goserver
              containerPort: {{ .Values.goserver.serverPort }}
          env:
            - name: B3_TRACE
              value: "{{ .Values.goserver.b3Trace }}"
            - name: JSON
              value: "{{ .Values.goserver.json }}"
            - name: REQUEST_SIZE
              value: "{{ .Values.goserver.requestSize }}"
            - name: RESPONSE_SIZE
              value: "{{ .Values.goserver.responseSize }}"
            - name: SERVER_PORT
              value: "{{ .Values.goserver.serverPort }}"
            - name: UPSTREAM_HOST
              value: {{ .Values.goserver.upstreamHost }}
            - name: UPSTREAM_PORT
              value: "{{ .Values.goserver.upstreamPort }}"
            - name: VERBOSE
              value: "{{ .Values.goserver.verbose }}"
          livenessProbe:
            httpGet:
              path: "/health"
              port: {{ .Values.goserver.serverPort }}
            initialDelaySeconds: {{ .Values.deployment.livenessProbe.initialDelaySeconds}}
            periodSeconds: {{ .Values.deployment.livenessProbe.periodSeconds}}
          readinessProbe:
            httpGet:
              path: "/health"
              port: {{ .Values.goserver.serverPort }}
            initialDelaySeconds: {{ .Values.deployment.readinessProbe.initialDelaySeconds}}
            periodSeconds: {{ .Values.deployment.readinessProbe.periodSeconds}}
          resources:
            requests:
              cpu: "{{ .Values.deployment.resources.requests.cpu }}"
              memory: "{{ .Values.deployment.resources.requests.memory }}"
      {{- if or (.Values.deployment.affinity.node) (or (.Values.deployment.pod) (.Values.deployment.pod_anti)) }}
      affinity:
        {{- if .Values.deployment.affinity.node }}
        nodeAffinity:
        {{- toYaml .Values.deployment.affinity.node | nindent 10 }}
        {{- end }}
        {{- if .Values.deployment.affinity.pod }}
        podAffinity:
        {{- toYaml .Values.deployment.affinity.pod | nindent 10 }}
        {{- end }}
        {{- if .Values.deployment.affinity.pod_anti }}
        podAntiAffinity:
        {{- toYaml .Values.deployment.affinity.pod_anti | nindent 10 }}
        {{- end }}
      {{- end }}
      {{- if .Values.deployment.tolerations }}
      tolerations:
      {{- toYaml .Values.deployment.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.deployment.node_selector }}
      nodeSelector:
      {{- toYaml .Values.deployment.node_selector | nindent 8 }}
      {{- end }}
